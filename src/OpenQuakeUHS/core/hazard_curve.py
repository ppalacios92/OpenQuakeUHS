"""
Hazard Curve Reader and Plotter
Author: Ing. Patricio Palacios Msc.
Date: June 7, 2025

Description:
------------
This module defines the class `HazardCurve`, used to read and plot
hazard curves generated by OpenQuake. These files contain probability
of exceedance (PoE) values for different spectral acceleration (Sa) levels
at a given site (longitude, latitude, depth).
"""

import pandas as pd
import matplotlib.pyplot as plt

class HazardCurve:
    """
    Represents a single hazard curve extracted from an OpenQuake CSV output file.
    """
    def __init__(self, filepath):
        """
        Initializes the object and parses the CSV file.

        Parameters:
        - filepath (str): Path to the hazard curve CSV file
        """
        self.filepath = filepath
        self.filename = filepath.split("/")[-1]
        self.latitude = None
        self.longitude = None
        self.depth = None
        self.sa_values = []
        self.poe_values = []

        self._read_csv()

    def _read_csv(self):
        """
        Reads the hazard curve CSV file and extracts:
        - Geographic location (longitude, latitude, depth)
        - Sa levels (spectral accelerations)
        - PoE values (probability of exceedance)
        """
        df = pd.read_csv(self.filepath, header=None)

        header = df.iloc[1].tolist()  # 2nd row: PoEs
        values = df.iloc[2].tolist()  # 3rd row: Sa values

        self.longitude = float(values[0])
        self.latitude = float(values[1])
        self.depth = float(values[2])

        self.poe_values = [float(x) for x in header[3:]]
        self.sa_values = [float(x) for x in values[3:]]

    def plot(self, ax=None, label=None, color=None):
        """
        Plots the hazard curve (PoE vs Sa).

        Parameters:
        - ax (matplotlib.axes): Optional axis to plot into
        - label (str): Optional label for the curve
        - color (str): Optional color for the curve
        """
        if ax is None:
            fig, ax = plt.subplots()

        ax.plot(self.sa_values, self.poe_values, label=label or self.filename, color=color)
        ax.set_xlabel("Spectral Acceleration [g]", fontweight="bold")
        ax.set_ylabel("Probability of Exceedance", fontweight="bold")
        ax.set_title(f"Hazard Curve at ({self.latitude:.3f}, {self.longitude:.3f}, {self.depth:.1f} km)", fontweight="bold")
        ax.set_xscale("log")
        ax.set_yscale("log")
        ax.grid(True, which='both', linestyle='--', alpha=0.6)

        if label:
            ax.legend()

        if ax is None:
            plt.show()
